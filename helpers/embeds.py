import discord
import datetime
from __init__ import (
    __title__,
    __author__,
    __version__,
    __date_created__,
    __last_updated__,
    __support_channel__,
)
from ruamel.yaml import YAML
from helpers.helper import get_data_file_yml


def _footer(embed: discord.Embed):
    embed.set_footer(text=f"¬© Author: {__support_channel__}")


# Ping embed (ki·ªÉm tra ƒë·ªô tr·ªÖ)
def ping_embed(ping: float) -> discord.Embed:
    embed = discord.Embed(
        title="Xem ƒë·ªô tr·ªÖ c·ªßa bot",
        description=f" - ƒê·ªô tr·ªÖ c·ªßa bot l√†: **{ping:.2f}ms**",
        color=discord.Color.green(),
    )
    _footer(embed)
    return embed


# Setup bot embed (c√†i ƒë·∫∑t bot)
def setup_bot_embed(partner_id: str, partner_key: str) -> discord.Embed:
    embed = discord.Embed(
        title="C√†i ƒë·∫∑t bot",
        description=f"Th√¥ng tin ƒë√£ ƒë∆∞·ª£c l∆∞u: \n - Partner_id: **{partner_id}**\n - Partner_key: **||{partner_key}||**",
        color=discord.Color.blue(),
    )
    _footer(embed)
    return embed


# Error embed (l·ªói)
def error_embed(description: str) -> discord.Embed:
    embed = discord.Embed(
        title="L·ªói",
        description=description,
        color=discord.Color.red(),
    )
    _footer(embed)
    return embed


# Success embed (th√†nh c√¥ng)
def success_embed(description: str) -> discord.Embed:
    embed = discord.Embed(
        title="Th√†nh c√¥ng",
        description=description,
        color=discord.Color.green(),
    )
    _footer(embed)
    return embed


# Show setup bot embed (hi·ªÉn th·ªã c√†i ƒë·∫∑t bot)
def show_setup_bot_embed(
    partner_id: str, partner_key: str, provider: str
) -> discord.Embed:
    embed = discord.Embed(
        title="C√†i ƒë·∫∑t bot",
        description=f"Th√¥ng tin ƒë√£ ƒë∆∞·ª£c l∆∞u: \n - Partner_id: **{partner_id}**\n - Partner_key: **||{partner_key}||** \n - Nh√† cung c·∫•p: **{provider}**",
        color=discord.Color.blue(),
    )
    _footer(embed)
    return embed


# Debug embed (debug)
def debug_embed(description: str) -> discord.Embed:
    embed = discord.Embed(
        title="Debug",
        description=description,
        color=discord.Color.red(),
    )
    _footer(embed)
    return embed


# Danh s√°ch ph√≠ th·∫•p nh·∫•t (t·∫•t c·∫£ nh√† m·∫°ng)
def list_lowest_fee_telco_embed(
    telco_min: str, fee_min: float, list_telco_fee_min: list
) -> list[discord.Embed]:
    config = get_data_file_yml()

    embed_main = discord.Embed(
        description=f"[{datetime.datetime.now().strftime('%d/%m/%Y %H:%M')}] \n\n **__Th√¥ng tin ch√≠nh:__** \n > Nh√† m·∫°ng ph√≠ **th·∫•p nh·∫•t** **[{telco_min}]({config['url']['app']})** \n > Chi·∫øt kh·∫•u **[{fee_min:,}%]({config['url']['app']})** \n > vd: *{10000:,.0f} {telco_min} = {int(10000 * (1 - fee_min / 100)):,} vnƒë*",
        color=discord.Color.from_str("#ffd154"),
    )

    text_sub = ""
    for telco, fee in list_telco_fee_min.items():
        text_sub += f"> ‚ñ´Ô∏è ` {fee:.1f}% ` {telco} \n"

    embed_sub = discord.Embed(
        description=f"**__C√°c nh√† m·∫°ng c√≤n l·∫°i:__** \n {text_sub} \n",
        color=discord.Color.from_str("#95afc0"),
    )

    embed_sub.set_image(
        url=config["banner"]["kiem_tra_phi"] or config["banner"]["default"]
    )

    _footer(embed_main)
    _footer(embed_sub)
    return [embed_main, embed_sub]


# Danh s√°ch ph√≠ th·∫•p nh·∫•t (t·∫•t c·∫£ nh√† m·∫°ng)
def lowest_fee_telco_embed(
    telco: str, fee_min: str, amount_min: float, list_fee: list
) -> list[discord.Embed]:
    config = get_data_file_yml()

    embed_main = discord.Embed(
        description=f"[{datetime.datetime.now().strftime('%d/%m/%Y %H:%M')}] \n\n **{telco.upper()}** \n\n **__Th√¥ng tin ch√≠nh:__** \n > M·ªánh gi√° **th·∫•p nh·∫•t** **[{amount_min:,.0f}]({config['url']['app']})** \n > Chi·∫øt kh·∫•u **[{fee_min:,}%]({config['url']['app']})** \n > vd: *{amount_min:,.0f} VNƒê = {int(amount_min * (1 - fee_min / 100)):,} vnƒë*",
        color=discord.Color.from_str("#ffd154"),
    )

    text_sub = ""
    for amount, fee in list_fee.items():
        text_sub += f"> ‚ñ´Ô∏è ` {int(amount):,} ` -> **{float(fee):.1f}%** \n"

    embed_sub = discord.Embed(
        description=f"**__C√°c m·ªánh gi√° c√≤n l·∫°i:__** \n {text_sub} \n",
        color=discord.Color.from_str("#95afc0"),
    )

    embed_sub.set_image(
        url=config["banner"]["kiem_tra_phi"] or config["banner"]["default"]
    )

    _footer(embed_main)
    _footer(embed_sub)
    return [embed_main, embed_sub]


# H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot
def help_embed() -> discord.Embed:
    data = [
        {
            "title": "L·ªánh c∆° b·∫£n",
            "list": [
                {"name": "help", "description": "Xem h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot"},
                {"name": "ping", "description": "Ki·ªÉm tra ping c·ªßa bot"},
            ],
        },
        {
            "title": "Th·∫ª c√†o",
            "list": [
                {"name": "kiem-tra-phi", "description": "Ki·ªÉm tra ph√≠ ƒë·ªïi th·∫ª c√†o"},
                {"name": "nap-the", "description": "N·∫°p th·∫ª c√†o"},
            ],
        },
        {
            "title": "Qu·∫£n tr·ªã vi√™n",
            "list": [
                {"name": "reload", "description": "T·∫£i l·∫°i t·∫•t c·∫£ c√°c cog"},
                {"name": "show-setup", "description": "Hi·ªÉn th·ªã c√†i ƒë·∫∑t bot"},
                {"name": "setup-bot", "description": "C√†i ƒë·∫∑t bot"},
            ],
        },
    ]

    text = ""
    for item in data:
        text += f"**{item['title']}**\n"
        for item_list in item["list"]:
            text += f" - `{item_list['name']}`: {item_list['description']}\n"
        text += "\n"

    embed = discord.Embed(
        title="H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot",
        description=text,
        color=discord.Color.blue(),
    )
    _footer(embed)
    return embed


# N·∫°p th·∫ª c√†o embed - X√ÅC NH·∫¨N (x√°c nh·∫≠n th√¥ng tin tr∆∞·ªõc khi n·∫°p)
def confirmation_embed(telco: str, amount: int, code: str, serial: str) -> discord.Embed:
    embed = discord.Embed(
        title="üîç X√°c nh·∫≠n th√¥ng tin th·∫ª c√†o",
        description="Vui l√≤ng ki·ªÉm tra k·ªπ th√¥ng tin tr∆∞·ªõc khi x√°c nh·∫≠n:",
        color=discord.Color.blue(),
    )

    embed.add_field(name="Nh√† m·∫°ng", value=telco.capitalize(), inline=True)
    embed.add_field(name="M·ªánh gi√°", value=f"{amount:,} VND", inline=True)
    embed.add_field(name="‚†Ä", value="‚†Ä", inline=True)  # Spacer
    embed.add_field(name="M√£ th·∫ª", value=f"||{code}||", inline=True)
    embed.add_field(name="Serial", value=f"||{serial}||", inline=True)
    embed.add_field(name="‚†Ä", value="‚†Ä", inline=True)  # Spacer

    embed.add_field(
        name="‚ö†Ô∏è L∆∞u √Ω", 
        value="‚Ä¢ Vui l√≤ng ki·ªÉm tra k·ªπ th√¥ng tin tr∆∞·ªõc khi x√°c nh·∫≠n\n‚Ä¢ Nh·∫•n **X√°c nh·∫≠n** ƒë·ªÉ ti·∫øp t·ª•c ho·∫∑c **H·ªßy** ƒë·ªÉ d·ª´ng l·∫°i", 
        inline=False
    )

    _footer(embed)
    return embed


# N·∫°p th·∫ª c√†o embed - CH·ªú X·ª¨ L√ù (ch·ªù x·ª≠ l√Ω n·∫°p th·∫ª c√†o)
def waiting_for_processing_embed(telco: str, amount: int, code: str, serial: str, order_id: str) -> discord.Embed:
    embed = discord.Embed(
        title="‚è≥ Th·∫ª c√†o ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω",
        description="H·ªá th·ªëng ƒë√£ ti·∫øp nh·∫≠n y√™u c·∫ßu c·ªßa b·∫°n v√† ƒëang x·ª≠ l√Ω...",
        color=discord.Color.yellow(),
    )

    embed.add_field(name="Nh√† m·∫°ng", value=telco, inline=True)
    embed.add_field(name="M·ªánh gi√°", value=f"{amount:,} VND", inline=True)
    embed.add_field(name="M√£ giao d·ªãch", value=f"`{order_id}`", inline=True)
    embed.add_field(name="M√£ th·∫ª", value=f"||{code}||", inline=True)
    embed.add_field(name="Serial", value=f"||{serial}||", inline=True)

    _footer(embed)
    return embed


# N·∫°p th·∫ª c√†o embed - TH√ÄNH C√îNG (th·∫ª ƒë√∫ng m·ªánh gi√°)
def card_success_embed(telco: str, amount: int, code: str, serial: str, order_id: str, card_value: int) -> discord.Embed:
    embed = discord.Embed(
        title="‚úÖ Th·∫ª c√†o ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng",
        description="Th·∫ª c√†o c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng v·ªõi ƒë√∫ng m·ªánh gi√°!",
        color=discord.Color.green(),
    )

    embed.add_field(name="Nh√† m·∫°ng", value=telco, inline=True)
    embed.add_field(name="M·ªánh gi√°", value=f"{amount:,} VND", inline=True)
    embed.add_field(name="M√£ giao d·ªãch", value=f"`{order_id}`", inline=True)
    embed.add_field(name="M√£ th·∫ª", value=f"||{code}||", inline=True)
    embed.add_field(name="Serial", value=f"||{serial}||", inline=True)
    embed.add_field(name="M·ªánh gi√° th·ª±c t·∫ø", value=f"**{card_value:,} VND**", inline=True)

    embed.add_field(
        name="üéâ Ch√∫c m·ª´ng", 
        value="Th·∫ª c√†o ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng v·ªõi ƒë√∫ng m·ªánh gi√°!", 
        inline=False
    )

    _footer(embed)
    return embed


# N·∫°p th·∫ª c√†o embed - SAI M·ªÜNH GI√Å (tr·ª´ 50% gi√° tr·ªã)
def card_wrong_amount_embed(telco: str, amount: int, code: str, serial: str, order_id: str, card_value: int) -> discord.Embed:
    embed = discord.Embed(
        title="‚ö†Ô∏è Th·∫ª c√†o sai m·ªánh gi√°",
        description="Th·∫ª c√†o ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω nh∆∞ng sai m·ªánh gi√°, gi√° tr·ªã s·∫Ω b·ªã tr·ª´ 50%.",
        color=discord.Color.orange(),
    )

    embed.add_field(name="Nh√† m·∫°ng", value=telco, inline=True)
    embed.add_field(name="M·ªánh gi√° khai b√°o", value=f"{amount:,} VND", inline=True)
    embed.add_field(name="M√£ giao d·ªãch", value=f"`{order_id}`", inline=True)
    embed.add_field(name="M√£ th·∫ª", value=f"||{code}||", inline=True)
    embed.add_field(name="Serial", value=f"||{serial}||", inline=True)
    embed.add_field(name="M·ªánh gi√° th·ª±c t·∫ø", value=f"{card_value:,} VND", inline=True)

    embed.add_field(
        name="‚ö†Ô∏è L∆∞u √Ω", 
        value="Do th·∫ª sai m·ªánh gi√°, gi√° tr·ªã ƒë√£ b·ªã tr·ª´ 50% theo quy ƒë·ªãnh.", 
        inline=False
    )

    _footer(embed)
    return embed


# N·∫°p th·∫ª c√†o embed - TH·∫§T B·∫†I (th·∫ª l·ªói)
def card_failed_embed(telco: str, amount: int, code: str, serial: str, order_id: str, error_message: str = None) -> discord.Embed:
    embed = discord.Embed(
        title="‚ùå Th·∫ª c√†o x·ª≠ l√Ω th·∫•t b·∫°i",
        description="R·∫•t ti·∫øc, th·∫ª c√†o c·ªßa b·∫°n kh√¥ng th·ªÉ ƒë∆∞·ª£c x·ª≠ l√Ω.",
        color=discord.Color.red(),
    )

    embed.add_field(name="Nh√† m·∫°ng", value=telco, inline=True)
    embed.add_field(name="M·ªánh gi√°", value=f"{amount:,} VND", inline=True)
    embed.add_field(name="M√£ giao d·ªãch", value=f"`{order_id}`", inline=True)
    embed.add_field(name="M√£ th·∫ª", value=f"||{code}||", inline=True)
    embed.add_field(name="Serial", value=f"||{serial}||", inline=True)
    embed.add_field(name="‚†Ä", value="‚†Ä", inline=True)  # Spacer

    if error_message:
        embed.add_field(
            name="‚ùå L√Ω do", 
            value=f"{error_message}", 
            inline=False
        )
    else:
        embed.add_field(
            name="‚ùå L√Ω do", 
            value="Th·∫ª c√†o kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng.", 
            inline=False
        )

    _footer(embed)
    return embed